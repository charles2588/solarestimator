{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport battery_types from \"../util/Battery\";\nconst initialBatteryState = {\n  batteryType: \"\",\n  batteryName: \"\",\n  batteryFloorHeight: 0,\n  batteryFloorWidth: 0,\n  batteryEnergy: 0,\n  batteryCost: 0,\n  batteryReleaseDate: 0\n};\nconst initialNoOfBattries = {\n  noOfBatteries: 0\n};\nconst getBatteryDetails = input_battery => {\n  return battery_types.find(battery => battery.battery_name === input_battery);\n};\nconst batterySlice = createSlice({\n  name: 'battery',\n  initialState: initialBatteryState,\n  reducers: {\n    setBatteryType: (state, action) => {\n      state.batteryType = action.payload;\n      const battery = getBatteryDetails(state.batteryType);\n      if (battery) {\n        state.batteryCost = battery === null || battery === void 0 ? void 0 : battery.cost;\n        state.batteryFloorHeight = battery === null || battery === void 0 ? void 0 : battery.floor_height;\n        state.batteryFloorWidth = battery === null || battery === void 0 ? void 0 : battery.floor_width;\n        state.batteryName = battery === null || battery === void 0 ? void 0 : battery.battery_name;\n        state.batteryEnergy = battery === null || battery === void 0 ? void 0 : battery.energy;\n        state.batteryReleaseDate = battery === null || battery === void 0 ? void 0 : battery.release_date;\n      }\n    }\n  }\n});\nconst noofbatteriesSlice = createSlice({\n  name: 'noofbatteries',\n  initialState: initialNoOfBattries,\n  reducers: {\n    setNoOfBatteries: (state, action) => {\n      state.noOfBatteries = action.payload;\n    }\n  }\n});\nexport const {\n  setBatteryType\n} = batterySlice.actions;\nexport const {\n  setNoOfBatteries\n} = noofbatteriesSlice.actions;\nexport default batterySlice.reducer;","map":{"version":3,"names":["createSlice","battery_types","initialBatteryState","batteryType","batteryName","batteryFloorHeight","batteryFloorWidth","batteryEnergy","batteryCost","batteryReleaseDate","initialNoOfBattries","noOfBatteries","getBatteryDetails","input_battery","find","battery","battery_name","batterySlice","name","initialState","reducers","setBatteryType","state","action","payload","cost","floor_height","floor_width","energy","release_date","noofbatteriesSlice","setNoOfBatteries","actions","reducer"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/reducers/reducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport battery_types from \"../util/Battery\";\n\nconst initialBatteryState = {\n    batteryType: \"\",\n    batteryName: \"\",\n    batteryFloorHeight: 0,\n    batteryFloorWidth: 0,\n    batteryEnergy:0,\n    batteryCost: 0,\n    batteryReleaseDate: 0,\n}\n\nconst initialNoOfBattries = {\n    noOfBatteries: 0,\n}\n\nconst getBatteryDetails = (input_battery: any) => {\n    return battery_types.find((battery) => battery.battery_name === input_battery);\n}\n\nconst batterySlice = createSlice({\n    name: 'battery',\n    initialState: initialBatteryState,\n    reducers: {\n        setBatteryType: (state, action) => {\n            state.batteryType = action.payload;\n            const battery = getBatteryDetails(state.batteryType);\n            if (battery) {\n                state.batteryCost = battery?.cost;\n                state.batteryFloorHeight = battery?.floor_height;\n                state.batteryFloorWidth = battery?.floor_width;\n                state.batteryName = battery?.battery_name;\n                state.batteryEnergy = battery?.energy;\n                state.batteryReleaseDate = battery?.release_date;\n            }\n        },\n    },\n});\n\nconst noofbatteriesSlice = createSlice({\n    name: 'noofbatteries',\n    initialState: initialNoOfBattries,\n    reducers: {\n        setNoOfBatteries: (state, action) => {\n            state.noOfBatteries = action.payload;\n        },\n    },\n});\n\n\nexport const { setBatteryType} = batterySlice.actions;\nexport const { setNoOfBatteries} = noofbatteriesSlice.actions;\n\n\nexport default batterySlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,mBAAmB,GAAG;EACxBC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,EAAE;EACfC,kBAAkB,EAAE,CAAC;EACrBC,iBAAiB,EAAE,CAAC;EACpBC,aAAa,EAAC,CAAC;EACfC,WAAW,EAAE,CAAC;EACdC,kBAAkB,EAAE;AACxB,CAAC;AAED,MAAMC,mBAAmB,GAAG;EACxBC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,iBAAiB,GAAIC,aAAkB,IAAK;EAC9C,OAAOZ,aAAa,CAACa,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,YAAY,KAAKH,aAAa,CAAC;AAClF,CAAC;AAED,MAAMI,YAAY,GAAGjB,WAAW,CAAC;EAC7BkB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEjB,mBAAmB;EACjCkB,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACnB,WAAW,GAAGoB,MAAM,CAACC,OAAO;MAClC,MAAMT,OAAO,GAAGH,iBAAiB,CAACU,KAAK,CAACnB,WAAW,CAAC;MACpD,IAAIY,OAAO,EAAE;QACTO,KAAK,CAACd,WAAW,GAAGO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,IAAI;QACjCH,KAAK,CAACjB,kBAAkB,GAAGU,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,YAAY;QAChDJ,KAAK,CAAChB,iBAAiB,GAAGS,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,WAAW;QAC9CL,KAAK,CAAClB,WAAW,GAAGW,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,YAAY;QACzCM,KAAK,CAACf,aAAa,GAAGQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,MAAM;QACrCN,KAAK,CAACb,kBAAkB,GAAGM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,YAAY;MACpD;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAG9B,WAAW,CAAC;EACnCkB,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAET,mBAAmB;EACjCU,QAAQ,EAAE;IACNW,gBAAgB,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACX,aAAa,GAAGY,MAAM,CAACC,OAAO;IACxC;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEH;AAAc,CAAC,GAAGJ,YAAY,CAACe,OAAO;AACrD,OAAO,MAAM;EAAED;AAAgB,CAAC,GAAGD,kBAAkB,CAACE,OAAO;AAG7D,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}