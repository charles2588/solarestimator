{"ast":null,"code":"var _jsxFileName = \"/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/components/PlanLayoutPanel.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport getEstimation from '../util/PanelCalculator';\nimport { Box, Paper } from '@mui/material';\nimport { TeslaMegapack, Transformer } from './TeslaMegapack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlanLayoutPanel = () => {\n  _s();\n  const battery = useSelector(state => state.battery);\n  const noOfBatteries = battery.noOfBatteries;\n  const estimation = getEstimation(battery, noOfBatteries);\n  const width = battery.batteryFloorWidth;\n  const height = battery.batteryFloorHeight;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      m: 2,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          children: [Array.from({\n            length: noOfBatteries\n          }, (_, index) => /*#__PURE__*/_jsxDEV(TeslaMegapack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)), Array.from({\n            length: noOfBatteries\n          }, (_, index) => /*#__PURE__*/_jsxDEV(Transformer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PlanLayoutPanel, \"1vs3zE9KFgM0dVh6t9MDf80cOf4=\", false, function () {\n  return [useSelector];\n});\n_c = PlanLayoutPanel;\nexport default PlanLayoutPanel;\nvar _c;\n$RefreshReg$(_c, \"PlanLayoutPanel\");","map":{"version":3,"names":["React","useSelector","getEstimation","Box","Paper","TeslaMegapack","Transformer","jsxDEV","_jsxDEV","Fragment","_Fragment","PlanLayoutPanel","_s","battery","state","noOfBatteries","estimation","width","batteryFloorWidth","height","batteryFloorHeight","children","m","elevation","variant","p","Array","from","length","_","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/components/PlanLayoutPanel.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport getEstimation from '../util/PanelCalculator';\nimport { Box, Paper } from '@mui/material';\nimport { TeslaMegapack, Transformer } from './TeslaMegapack';\n\n\nconst PlanLayoutPanel = () => {\n    const battery = useSelector((state: any) => state.battery);\n    const noOfBatteries = battery.noOfBatteries;\n\n    const estimation = getEstimation(battery, noOfBatteries);\n\n    const width = battery.batteryFloorWidth;\n    const height = battery.batteryFloorHeight;\n\n    return (\n        <>\n            <Box m={2}>\n                <Paper elevation={3} variant=\"outlined\">\n                    <Box p={2}>\n                        {Array.from({ length: noOfBatteries }, (_, index) => (\n                            <TeslaMegapack />\n                        ))}\n                        {Array.from({ length: noOfBatteries }, (_, index) => (\n                            <Transformer />\n                        ))}\n                    </Box>\n                </Paper>\n            </Box>\n        </>\n    );\n}\n\nexport default PlanLayoutPanel;"],"mappings":";;AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,SAASC,GAAG,EAAEC,KAAK,QAAQ,eAAe;AAC1C,SAASC,aAAa,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG7D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGZ,WAAW,CAAEa,KAAU,IAAKA,KAAK,CAACD,OAAO,CAAC;EAC1D,MAAME,aAAa,GAAGF,OAAO,CAACE,aAAa;EAE3C,MAAMC,UAAU,GAAGd,aAAa,CAACW,OAAO,EAAEE,aAAa,CAAC;EAExD,MAAME,KAAK,GAAGJ,OAAO,CAACK,iBAAiB;EACvC,MAAMC,MAAM,GAAGN,OAAO,CAACO,kBAAkB;EAEzC,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA,CAACL,GAAG;MAACmB,CAAC,EAAE,CAAE;MAAAD,QAAA,eACNb,OAAA,CAACJ,KAAK;QAACmB,SAAS,EAAE,CAAE;QAACC,OAAO,EAAC,UAAU;QAAAH,QAAA,eACnCb,OAAA,CAACL,GAAG;UAACsB,CAAC,EAAE,CAAE;UAAAJ,QAAA,GACLK,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAEb;UAAc,CAAC,EAAE,CAACc,CAAC,EAAEC,KAAK,kBAC5CtB,OAAA,CAACH,aAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACnB,CAAC,EACDR,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAEb;UAAc,CAAC,EAAE,CAACc,CAAC,EAAEC,KAAK,kBAC5CtB,OAAA,CAACF,WAAW;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAzBKD,eAAe;EAAA,QACDV,WAAW;AAAA;AAAAkC,EAAA,GADzBxB,eAAe;AA2BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}