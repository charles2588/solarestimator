{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport battery_types from \"../util/Battery\";\nconst initialBatteryState = {\n  batteryType: \"\",\n  batteryName: \"\",\n  batteryFloorHeight: 0,\n  batteryFloorWidth: 0,\n  batteryCost: 0,\n  batteryReleaseDate: 0\n};\nconst getBatteryDetails = input_battery => {\n  console.log(battery_types);\n  return battery_types.find(battery => battery.battery_type === input_battery);\n};\nconst batterySlice = createSlice({\n  name: 'battery',\n  initialState: initialBatteryState,\n  reducers: {\n    setBatteryType: (state, action) => {\n      state.batteryType = action.payload;\n      const battery = getBatteryDetails(state.batteryType);\n      if (battery) {\n        state.batteryCost = battery === null || battery === void 0 ? void 0 : battery.cost;\n      }\n    }\n  }\n});\nexport const {\n  setBatteryType\n} = batterySlice.actions;\nexport default batterySlice.reducer;","map":{"version":3,"names":["createSlice","battery_types","initialBatteryState","batteryType","batteryName","batteryFloorHeight","batteryFloorWidth","batteryCost","batteryReleaseDate","getBatteryDetails","input_battery","console","log","find","battery","battery_type","batterySlice","name","initialState","reducers","setBatteryType","state","action","payload","cost","actions","reducer"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/reducers/reducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport battery_types from \"../util/Battery\";\n\nconst initialBatteryState = {\n    batteryType: \"\",\n    batteryName: \"\",\n    batteryFloorHeight: 0,\n    batteryFloorWidth: 0,\n    batteryCost: 0,\n    batteryReleaseDate: 0,\n}\n\nconst getBatteryDetails = (input_battery: any) => {\n    console.log(battery_types);\n    return battery_types.find((battery) => battery.battery_type === input_battery);\n}\n\nconst batterySlice = createSlice({\n    name: 'battery',\n    initialState: initialBatteryState,\n    reducers: {\n        setBatteryType: (state, action) => {\n            state.batteryType = action.payload;\n            const battery = getBatteryDetails(state.batteryType);\n            if (battery) {\n                state.batteryCost = battery?.cost;\n            }\n        },\n    },\n});\n\nexport const { setBatteryType } = batterySlice.actions;\n\nexport default batterySlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,mBAAmB,GAAG;EACxBC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,EAAE;EACfC,kBAAkB,EAAE,CAAC;EACrBC,iBAAiB,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC;EACdC,kBAAkB,EAAE;AACxB,CAAC;AAED,MAAMC,iBAAiB,GAAIC,aAAkB,IAAK;EAC9CC,OAAO,CAACC,GAAG,CAACX,aAAa,CAAC;EAC1B,OAAOA,aAAa,CAACY,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,YAAY,KAAKL,aAAa,CAAC;AAClF,CAAC;AAED,MAAMM,YAAY,GAAGhB,WAAW,CAAC;EAC7BiB,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEhB,mBAAmB;EACjCiB,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAAClB,WAAW,GAAGmB,MAAM,CAACC,OAAO;MAClC,MAAMT,OAAO,GAAGL,iBAAiB,CAACY,KAAK,CAAClB,WAAW,CAAC;MACpD,IAAIW,OAAO,EAAE;QACTO,KAAK,CAACd,WAAW,GAAGO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,IAAI;MACrC;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAe,CAAC,GAAGJ,YAAY,CAACS,OAAO;AAEtD,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}