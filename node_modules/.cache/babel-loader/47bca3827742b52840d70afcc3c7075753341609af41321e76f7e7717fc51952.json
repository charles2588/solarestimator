{"ast":null,"code":"const getEstimation = (battery, noOfBatteries) => {\n  let total = 0;\n  {/* show the price, land dimension required and the sites energy density */}\n  let price = battery.price * noOfBatteries;\n  let landHeight = battery.landHeight * noOfBatteries;\n  let landWidth = battery.landWidth * noOfBatteries;\n  return {\n    price: price,\n    landHeight: landHeight,\n    landWidth: landWidth,\n    siteEnergy: 0\n  };\n};\nconst getTotalTransformers = noOfBatteries => {\n  //- Assume that for every 4 industrial batteries bought 1 transformer is needed.\n  return Math.ceil(noOfBatteries / 4);\n};\nexport default getEstimation;","map":{"version":3,"names":["getEstimation","battery","noOfBatteries","total","price","landHeight","landWidth","siteEnergy","getTotalTransformers","Math","ceil"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/util/PanelCalculator.js"],"sourcesContent":["const getEstimation = (battery,noOfBatteries) =>{\n    let total = 0;\n            {/* show the price, land dimension required and the sites energy density */}\n    let price = battery.price * noOfBatteries;\n    let landHeight = battery.landHeight * noOfBatteries;\n    let landWidth = battery.landWidth * noOfBatteries;\n    return ({\n        price : price,\n        landHeight:landHeight,\n        landWidth:landWidth,\n        siteEnergy:0\n    });\n}\n\nconst getTotalTransformers = (noOfBatteries) =>{\n    //- Assume that for every 4 industrial batteries bought 1 transformer is needed.\n    return Math.ceil(noOfBatteries/4);\n}\nexport default getEstimation;"],"mappings":"AAAA,MAAMA,aAAa,GAAGA,CAACC,OAAO,EAACC,aAAa,KAAI;EAC5C,IAAIC,KAAK,GAAG,CAAC;EACL,CAAC;EACT,IAAIC,KAAK,GAAGH,OAAO,CAACG,KAAK,GAAGF,aAAa;EACzC,IAAIG,UAAU,GAAGJ,OAAO,CAACI,UAAU,GAAGH,aAAa;EACnD,IAAII,SAAS,GAAGL,OAAO,CAACK,SAAS,GAAGJ,aAAa;EACjD,OAAQ;IACJE,KAAK,EAAGA,KAAK;IACbC,UAAU,EAACA,UAAU;IACrBC,SAAS,EAACA,SAAS;IACnBC,UAAU,EAAC;EACf,CAAC;AACL,CAAC;AAED,MAAMC,oBAAoB,GAAIN,aAAa,IAAI;EAC3C;EACA,OAAOO,IAAI,CAACC,IAAI,CAACR,aAAa,GAAC,CAAC,CAAC;AACrC,CAAC;AACD,eAAeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}