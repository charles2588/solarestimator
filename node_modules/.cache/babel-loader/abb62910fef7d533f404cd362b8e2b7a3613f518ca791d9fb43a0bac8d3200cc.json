{"ast":null,"code":"import { tranformer } from './Battery';\nconst getEstimation = (battery, noOfBatteries) => {\n  {/* show the price, land dimension required and the sites energy density */}\n  let landHeight = battery.batteryFloorHeight * noOfBatteries;\n  let landWidth = battery.batteryFloorWidth * noOfBatteries;\n  let siteEnergy = battery.batteryEnergy * noOfBatteries;\n  let noOfTransformers = getTotalTransformers(noOfBatteries);\n  let price = battery.batteryCost * noOfBatteries + tranformer.cost * noOfTransformers;\n  return {\n    price: price,\n    landHeight: landHeight,\n    landWidth: landWidth,\n    siteEnergy: siteEnergy,\n    noOfTransformers: noOfTransformers\n  };\n};\nconst getTotalTransformers = noOfBatteries => {\n  //- Assume that for every 4 industrial batteries bought 1 transformer is needed\n  // so if we get 3.5 then we consider we will need 4 transformers\n  return Math.ceil(noOfBatteries / 4);\n};\nexport default getEstimation;","map":{"version":3,"names":["tranformer","getEstimation","battery","noOfBatteries","landHeight","batteryFloorHeight","landWidth","batteryFloorWidth","siteEnergy","batteryEnergy","noOfTransformers","getTotalTransformers","price","batteryCost","cost","Math","ceil"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/util/PanelCalculator.js"],"sourcesContent":["import {tranformer} from './Battery';\nconst getEstimation = (battery, noOfBatteries) => {\n    {/* show the price, land dimension required and the sites energy density */ }\n    let landHeight = battery.batteryFloorHeight * noOfBatteries;\n    let landWidth = battery.batteryFloorWidth * noOfBatteries;\n    let siteEnergy = battery.batteryEnergy * noOfBatteries;\n    let noOfTransformers = getTotalTransformers(noOfBatteries);\n    let price = battery.batteryCost * noOfBatteries + tranformer.cost * noOfTransformers;\n    return ({\n        price: price,\n        landHeight: landHeight,\n        landWidth: landWidth,\n        siteEnergy: siteEnergy,\n        noOfTransformers: noOfTransformers,\n    });\n}\n\nconst getTotalTransformers = (noOfBatteries) => {\n    //- Assume that for every 4 industrial batteries bought 1 transformer is needed\n    // so if we get 3.5 then we consider we will need 4 transformers\n    return Math.ceil(noOfBatteries / 4);\n}\nexport default getEstimation;"],"mappings":"AAAA,SAAQA,UAAU,QAAO,WAAW;AACpC,MAAMC,aAAa,GAAGA,CAACC,OAAO,EAAEC,aAAa,KAAK;EAC9C,CAAC;EACD,IAAIC,UAAU,GAAGF,OAAO,CAACG,kBAAkB,GAAGF,aAAa;EAC3D,IAAIG,SAAS,GAAGJ,OAAO,CAACK,iBAAiB,GAAGJ,aAAa;EACzD,IAAIK,UAAU,GAAGN,OAAO,CAACO,aAAa,GAAGN,aAAa;EACtD,IAAIO,gBAAgB,GAAGC,oBAAoB,CAACR,aAAa,CAAC;EAC1D,IAAIS,KAAK,GAAGV,OAAO,CAACW,WAAW,GAAGV,aAAa,GAAGH,UAAU,CAACc,IAAI,GAAGJ,gBAAgB;EACpF,OAAQ;IACJE,KAAK,EAAEA,KAAK;IACZR,UAAU,EAAEA,UAAU;IACtBE,SAAS,EAAEA,SAAS;IACpBE,UAAU,EAAEA,UAAU;IACtBE,gBAAgB,EAAEA;EACtB,CAAC;AACL,CAAC;AAED,MAAMC,oBAAoB,GAAIR,aAAa,IAAK;EAC5C;EACA;EACA,OAAOY,IAAI,CAACC,IAAI,CAACb,aAAa,GAAG,CAAC,CAAC;AACvC,CAAC;AACD,eAAeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}