{"ast":null,"code":"var _jsxFileName = \"/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/components/InputDetailsPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { FormControl, MenuItem, InputLabel, Select, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useDispatch } from 'react-redux';\nimport { setBatteryType, setNoOfBatteries } from '../reducers/reducer';\nimport battery_types from '../util/Battery';\nimport \"./css/InputDetailsPanel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPane = () => {\n  _s();\n  const dispatch = useDispatch();\n  const formValuesRef = useRef({}); // State to hold form values\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    formValuesRef.current[name] = value;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Perform calculations or handle form submission logic here\n  };\n\n  const StyledContainer = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px'\n  });\n  const [selectedOption, setSelectedOption] = useState('');\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n    dispatch(setBatteryType(event.target.value));\n  };\n  const handleNoofBatteryChange = event => {\n    dispatch(setNoOfBatteries(event.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"select-label\",\n            children: \"Type Of Battery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"select-label\",\n            value: selectedOption,\n            onChange: handleOptionChange,\n            children: battery_types && battery_types.map(battery_item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: battery_item.battery_name,\n              children: battery_item.battery_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"noofbatteries\",\n          label: \"Number Of Batteries\",\n          onChange: handleNoofBatteryChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(FormPane, \"Nhj7x6EqYsy736aMeUglkwdzh1s=\", false, function () {\n  return [useDispatch];\n});\n_c = FormPane;\nexport default FormPane;\nvar _c;\n$RefreshReg$(_c, \"FormPane\");","map":{"version":3,"names":["React","useRef","useState","FormControl","MenuItem","InputLabel","Select","TextField","styled","useDispatch","setBatteryType","setNoOfBatteries","battery_types","jsxDEV","_jsxDEV","FormPane","_s","dispatch","formValuesRef","handleChange","event","name","value","target","current","handleSubmit","preventDefault","StyledContainer","display","flexDirection","margin","selectedOption","setSelectedOption","handleOptionChange","handleNoofBatteryChange","children","onSubmit","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","onChange","map","battery_item","battery_name","label","required","_c","$RefreshReg$"],"sources":["/Users/charlesgomes/Documents/Charles/Work/interview/Tesla/TakeHome/solarestimator/src/components/InputDetailsPanel.tsx"],"sourcesContent":["import React, {useRef, useState, FormEvent } from 'react';\nimport { FormControl, MenuItem, InputLabel, Select, TextField } from '@mui/material';\nimport { styled } from '@mui/system';\nimport {useDispatch} from 'react-redux';\nimport { setBatteryType,setNoOfBatteries } from '../reducers/reducer';\nimport battery_types from '../util/Battery';\nimport \"./css/InputDetailsPanel.css\";\n\n\nconst FormPane: React.FC = () => {\n    const dispatch = useDispatch();\n    const formValuesRef = useRef<{ [key: string]: string }>({}); // State to hold form values\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        formValuesRef.current[name] = value;\n    };\n\n    const handleSubmit = (event: FormEvent) => {\n        event.preventDefault();\n        // Perform calculations or handle form submission logic here\n    };\n\n    const StyledContainer = styled('div')({\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '10px',\n    });\n\n    const [selectedOption, setSelectedOption] = useState('');\n\n    const handleOptionChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n        setSelectedOption(event.target.value);\n        dispatch(setBatteryType(event.target.value))\n    };\n\n    const handleNoofBatteryChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n        dispatch(setNoOfBatteries(event.target.value));\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <StyledContainer>\n                    <FormControl>\n                        <InputLabel id=\"select-label\">Type Of Battery</InputLabel>\n                        <Select\n                            labelId=\"select-label\"\n                            value={selectedOption}\n                            onChange={handleOptionChange}\n                        >\n                            {battery_types && battery_types.map((battery_item) => (\n                                <MenuItem value={battery_item.battery_name}>{battery_item.battery_name}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        name=\"noofbatteries\"\n                        label=\"Number Of Batteries\"\n                        onChange={handleNoofBatteryChange} required\n                    />\n                </StyledContainer>\n            </form>\n        </div>\n    );\n};\n\nexport default FormPane;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}